# 公共配置文件
spring:
  #  在线调用
#  ai:
#    openai:
#      base-url: https://api.xty.app
#      api-key: sk-k4a6cLZndnefAwqpA9A0D4E11d324b0fBf6b2dB1AcCc69B0
#      chat:
#        options:
#          model: gpt-3.5-turbo
  freemarker:
    checkTemplateLocation: false
  application:
    name: hicode-backend
  # 默认 dev 环境
  profiles:
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # Elasticsearch 配置
  #  elasticsearch:
  #    uris: http://localhost:9200
  #    username: root
  #    password: 123456
  # 数据库配置
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://115.159.96.13:3306/my_oj
#    username: root
#    password: 261615
    url: jdbc:mysql://localhost:3306/my_oj
    username: root
    password: 261615
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 120000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # Redis 配置
  data:
    redis:
      # 地址
      host: localhost
      # 端口，默认为6379
      port: 6379
      # 数据库索引
      database: 0
      # 密码(如没有密码请注释掉)
      # password:
      # 连接超时时间
      timeout: 10s
      # 是否开启ssl
      ssl.enabled: false
    #password: 261615
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /api
  # undertow 配置
  undertow:
    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的
    max-http-post-size: -1
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 512
    # 是否分配的直接内存
    direct-buffers: true
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io: 8
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker: 256

# 日志配置
logging:
  level:
    team.ik: @logging.level@
    org.springframework: warn
  config: classpath:logback-plus.xml

#mybatis-flex
mybatis-flex:
  global-config:
    logic-delete-column: is_deleted

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否从cookie中读取token
  is-read-cookie: false
minio:
  endpoint: http://47.109.104.147:9001 #Minio服务所在地址
  bucketName: hicode #存储桶名称
  accessKey: 8O6VFa9XQCxnoYcHIy2D #访问的key
  secretKey: 165HpDM5m64J58jmhFYckOypKW1ZgkGbXXHXltTi #访问的秘钥